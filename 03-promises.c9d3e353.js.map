{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAe,GACrBC,YAAW,KACTD,EAAaR,SAAWA,EACxBQ,EAAaP,MAAQA,EACjBI,EACFF,EAAQK,GAERJ,EAAOI,EAAa,GAErBP,EAAM,G,CA1CES,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBACF,MACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cAEN,IAAIC,EAAYC,OAAOL,EAAMM,OAC7B,MAAMC,EAAWF,OAAOJ,EAAKK,OAC7B,IAAK,IAAIE,EAAI,EAAGA,GAAKN,EAAOI,MAAOE,IAAK,CACtCJ,GAAaG,EAGbxB,EAAcyB,EAFNJ,EAAYG,GAGjBE,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB9B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  let delayNumb = Number(delay.value);\n  const stepNumb = Number(step.value);\n  for (let i = 1; i <= amount.value; i++) {\n    delayNumb += stepNumb;\n    let x = delayNumb - stepNumb;\n\n    createPromise(i, x)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const promisObject = {};\n    setTimeout(() => {\n      promisObject.position = position;\n      promisObject.delay = delay;\n      if (shouldResolve) {\n        resolve(promisObject);\n      } else {\n        reject(promisObject);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","promisObject","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","delayNumb","Number","value","stepNumb","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.c9d3e353.js.map"}